import nodemailer from 'nodemailer';
import activationEmailHTML from '../template/email/activationEmail.js'
import dotev from 'dotenv'
import resetPassEmailHTML from '../template/email/resetPassEmail.js';
dotev.config()

const transporter = nodemailer.createTransport({
    service: process.env.SMTP_EMAIL_SERVICE,
    host: process.env.SMTP_HOST,
    port: process.env.SMTP_PORT,
    auth: {
        user: process.env.SMTP_EMAIL_LOGIN,
        pass: process.env.SMTP_EMAIL_PASS
    }
});

export async function sendEmail (email, subject, html) {
    
    const mailOptions = {
        from: process.env.SMTP_EMAIL_LOGIN,
        to: email,
        subject: subject,
        text: "",
        html: `<span style="opacity: 0;">üéâ –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –Ω–∞—à–∏ –Ω–æ–≤–æ—Å—Ç–∏! –ú—ã –æ—á–µ–Ω—å —Ä–∞–¥—ã, —á—Ç–æ –≤—ã —Å –Ω–∞–º–∏! üåü</span> ${html}`
    };

    transporter.sendMail(mailOptions, function(err, info) {
        if (err) {
            console.log(err);
        } else {
            return true
        }
    });
}

export function sendActivationLink (to, link) {

    const mailOptions = {
        from: process.env.SMTP_EMAIL_LOGIN,
        to: to,
        subject: "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞",
        text: '',
        html: `<span style="opacity: 0;">‚ö°Ô∏è–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –Ω–æ–≤—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º!‚ö°Ô∏è</span> ${activationEmailHTML(link)}`
    };

    transporter.sendMail(mailOptions, function(err, info) {
        if (err) {
            console.log(err);
        }
    });
}

export function sendResetPassLink (to, link) {

    const mailOptions = {
        from: process.env.SMTP_EMAIL_LOGIN,
        to: to,
        subject: "–°–±—Ä–æ—Å –ø–∞—Ä–æ–ª—è" ,
        text: '',
        html: `<span style="opacity: 0;">üîê –ù–∞–∂–º–∏—Ç–µ –∑–¥–µ—Å—å, —á—Ç–æ–±—ã —Å–±—Ä–æ—Å–∏—Ç—å –ø–∞—Ä–æ–ª—å –∏ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ —Å–≤–æ–µ–º—É –∞–∫–∫–∞—É–Ω—Ç—É! üîí</span> ${resetPassEmailHTML(link)}`
    };

    transporter.sendMail(mailOptions, function(err, info) {
        if (err) {
            console.log(err);
        }
    });
}